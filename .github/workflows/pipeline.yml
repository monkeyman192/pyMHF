name: pyMHF

on:
  # Run on all branches except for the gh-pages branch
  push:
    paths-ignore:
      - '*.md'
    branches-ignore:
      - 'gh-pages'
    tags:
      - '*'

jobs:
  lint_testing:
    name: Lint and test code
    runs-on: Windows-latest
    strategy:
      matrix:
        py_ver: [
          {version: '3.9'},
          {version: '3.10'},
          {version: '3.11'},
          {version: '3.12'},
          {version: '3.13'},
        ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.py_ver.version}}
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.py_ver.version}}"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip uv
          uv sync --frozen --all-groups --all-extras
      - name: Lint and format code
        run: |
          uv run ruff check ./pymhf ./tests
          uv run ruff format --check ./pymhf ./tests
      - name: Run unit tests
        run: uv run pytest ./tests
  build:
    name: Build wheel and docs
    runs-on: Windows-latest
    needs:
      - lint_testing
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip uv
          uv sync --frozen --all-groups --all-extras
      - name: Build api docs
        # Build the API docs. Note that we'll list explicitly all the files that
        # we don't want docs generated for.
        env:
          SPHINX_APIDOC_OPTION: members,no-undoc-members,show-inheritance
        run: >-
          uv run sphinx-apidoc --implicit-namespaces --no-toc --separate -d 1 -f -o docs/api ./pymhf
          pymhf/core/logging.py
          pymhf/core/common.py
          pymhf/core/caching.py
          pymhf/core/process.py
          pymhf/core/protocols.py
          pymhf/gui/protocols.py
          pymhf/injected.py
          pymhf/log_terminal.py
      - name: Build docs
        run: |
          uv run sphinx-build -M html $pwd/docs $pwd/build
      - name: Build Python ${{ matrix.py_ver.version}} wheel
        run: uv build
      - name: Check built artefacts
        run: uv run python -m twine check ./dist/*
      - name: Upload Wheels
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Store docs
        uses: actions/upload-artifact@v4
        with:
          name: pymhf-docs
          path: build/html/
  release:
    name: Release pyMHF wheels and source build to PyPI
    # Only run this job if the commit was tagged.
    if: startsWith(github.ref, 'refs/tags')
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pyMHF
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: Download files for release
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: true

  test-release:
    name: Release pyMHF wheels and source build to test-PyPI
    # Release to the test PyPI if we have merged into master or if we have tagged.
    if: ${{ (github.ref == 'refs/heads/master') || startsWith(github.ref, 'refs/tags') }}
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/pyMHF
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: Download files for release
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          attestations: true
  deploy_docs:
    name: Release docs
    # Only release docs when merging to the master branch
    if: github.ref == 'refs/heads/master'
    needs:
      - build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download files for release
        uses: actions/download-artifact@v4
        with:
          name: pymhf-docs
          path: built_docs/
      - name: Add .nojekyll
        run: touch built_docs/.nojekyll
      - name: Deploy docs
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: built_docs
          commit-message: Deploying to gh-page for commit ${{ github.sha }}
